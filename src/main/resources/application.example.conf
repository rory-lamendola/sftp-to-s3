//SFTPs can be connected to using either a key or a password, here we have an example of each

//Using a password
jobName1 {
  sftp {
    host = "example_host"
    username = "example_username"
    password = ""
    //directory that the files are in.  Must end in / if not blank
    path = "/example/"
    //regex to filter the files in the directory above
    filter = "*.pgp"
    //this is where you specify the sftp connection type (password or key currently)
    type = "password"
  }
  //Example of files that must be decrypted (PGP currently) before brought to S3
  encryption {
    encrypted = true
    //filename of the public key on S3
    publicKey = "example_public.asc"
    //filename of the private key on S3
    privateKey = "example_private.asc"
    //bucket the keys exist in on S3
    aws {
      bucket = "example_bucket"
      //kms keyID that the files are encrypted with on S3 (usually use the gilt-data-files-key)
      kms = ""
    }
    //password for the private key
    password = ""
  }
  aws {
    bucket = "example_bucket"
    kms = ""
  }
}
//Using a key to access the sftp
JobName2 {
  sftp {
    host = "example_host"
    username = "example_username"
    //This section identifies how to pull down the key file from S3
    key {
      keyName = "example_rsa.pem"
      aws {
        bucket = "example_bucket"
        kms = ""
      }
    }
    //can also leave the path blank
    path = ""
    filter = "*.csv"
    type = "key"
  }
  //Example of files that do not have to be decrypted before brought to S3
  encryption {
    encrypted = false
  }
  aws {
    bucket = "example_bucket"
    kms = ""
  }
}
JobName3 {
  sftp {
    host = "example_host"
    username = "example_username"
    //This section identifies how to pull down the key file from S3
    key {
      keyName = "example_rsa.pem"
      aws {
        bucket = "example_bucket"
        kms = ""
      }
    }
    //can also leave the path blank
    path = ""
    filter = "*.csv"
    type = "key"
  }
  //Example of files that do not have to be decrypted before brought to S3
  encryption {
    encrypted = false
  }
  aws {
    bucket = "example_bucket"
    kms = ""
    trimExtension= ".pgp"
  }
}




